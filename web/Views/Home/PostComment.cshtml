@model web.Models.PostCommentModel
@{
    Layout = null;
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<div class="opinion">

    @if (ViewBag.SuccessCreateComment == true)
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="alert alert-success">
                    <strong>Tebrikler!</strong> Yorumunuzu Aldık! Yorumunuz Onaylandıktan Sonra Görebilirsiniz.
                </div>
            </div>
        </div>
    }
    else if (ViewBag.HasUser == false)
    {
        <div class="alert alert-danger">
            Yorum Yapabilmek İçin Lütfen Öncelike <a href="/Home">Buradan</a> Üye Olmanız Gerekmektedir!
        </div>
    }
    else
    {
        <h3>Yorum Bırakın</h3>
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.ArticleId)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Gönder" class="btn btn-default" />
                </div>
            </div>
        }
    }


</div>


